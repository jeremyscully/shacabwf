@model ShacabWf.Web.Models.ChangeRequest
@using ShacabWf.Web.Models

@{
    ViewData["Title"] = "Change Request Details";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-10 offset-md-1">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Change Request #@Model.Id</h1>
                <div>
                    <a href="@Url.Action("MyRequests", "ChangeRequests")" class="btn btn-outline-secondary">
                        <i class="bi bi-arrow-left"></i> Back to My Requests
                    </a>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@Model.Title</h5>
                        <span class="badge bg-light text-dark">@Model.Status</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <p><strong>Created By:</strong> @(Model.CreatedBy?.FirstName ?? "") @(Model.CreatedBy?.LastName ?? "")</p>
                            <p><strong>Created On:</strong> @Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")</p>
                            <p><strong>Last Updated:</strong> @(Model.UpdatedAt?.ToString("MMM dd, yyyy HH:mm") ?? "N/A")</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Priority:</strong> <span class="badge @GetPriorityBadgeClass(Model.Priority)">@Model.Priority</span></p>
                            <p><strong>Type:</strong> @Model.Type</p>
                            <p><strong>Status:</strong> <span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span></p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Description</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.Description</p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Justification</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.Justification</p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Impact Assessment</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.RiskAssessment</p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Rollback Plan</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.BackoutPlan</p>
                        </div>
                    </div>

                    @if (Model.Status == ChangeRequestStatus.Draft)
                    {
                        <div class="d-flex justify-content-end">
                            <button class="btn btn-primary">Submit for Approval</button>
                        </div>
                    }
                </div>
            </div>

            <!-- Comments Section -->
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Comments</h5>
                </div>
                <div class="card-body">
                    @if (Model.Comments != null && Model.Comments.Any())
                    {
                        <div class="comments-list">
                            @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                            {
                                <div class="comment mb-3 p-3 border rounded">
                                    <div class="d-flex justify-content-between">
                                        <strong>@comment.Commenter?.FirstName @comment.Commenter?.LastName</strong>
                                        <small class="text-muted">@comment.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                                    </div>
                                    <p class="mt-2 mb-0">@comment.Text</p>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No comments yet.</p>
                    }

                    <div class="mt-4">
                        <h6>Add a Comment</h6>
                        <form>
                            <div class="mb-3">
                                <textarea class="form-control" rows="3" placeholder="Type your comment here..."></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Post Comment</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(ChangeRequestStatus status)
    {
        return status switch
        {
            ChangeRequestStatus.Draft => "bg-secondary",
            ChangeRequestStatus.SubmittedForSupervisorApproval => "bg-info",
            ChangeRequestStatus.SubmittedForCABApproval => "bg-warning",
            ChangeRequestStatus.SupervisorApproved => "bg-success",
            ChangeRequestStatus.CABApproved => "bg-success",
            ChangeRequestStatus.Scheduled => "bg-primary",
            ChangeRequestStatus.InProgress => "bg-primary",
            ChangeRequestStatus.Completed => "bg-success",
            ChangeRequestStatus.Failed => "bg-danger",
            ChangeRequestStatus.SupervisorRejected => "bg-danger",
            ChangeRequestStatus.CABRejected => "bg-danger",
            ChangeRequestStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetPriorityBadgeClass(ChangeRequestPriority priority)
    {
        return priority switch
        {
            ChangeRequestPriority.Low => "bg-success",
            ChangeRequestPriority.Medium => "bg-warning",
            ChangeRequestPriority.High => "bg-danger",
            ChangeRequestPriority.Critical => "bg-danger text-white",
            _ => "bg-secondary"
        };
    }
} 