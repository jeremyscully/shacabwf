@model ShacabWf.Web.Models.ChangeRequest
@using ShacabWf.Web.Models

@{
    ViewData["Title"] = "Change Request Details";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-10 offset-md-1">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1>Change Request #@Model.Id</h1>
                <div>
                    @if (ViewBag.Source == "cab")
                    {
                        <a href="@Url.Action("Cab", "ChangeRequests")" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to CAB Dashboard
                        </a>
                    }
                    else if (ViewBag.Source == "pendingapproval")
                    {
                        <a href="@Url.Action("PendingApproval", "ChangeRequests")" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to Pending Approvals
                        </a>
                    }
                    else if (ViewBag.Source == "assigned")
                    {
                        <a href="@Url.Action("Assigned", "ChangeRequests")" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to My Assignments
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("MyRequests", "ChangeRequests")" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Back to My Requests
                        </a>
                    }
                </div>
            </div>

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    @TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle-fill me-2"></i>
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">@Model.Title</h5>
                        <span class="badge bg-light text-dark">@Model.Status</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <p><strong>Created By:</strong> @(Model.CreatedBy?.FirstName ?? "") @(Model.CreatedBy?.LastName ?? "")</p>
                            <p><strong>Created On:</strong> @Model.CreatedAt.ToString("MMM dd, yyyy HH:mm")</p>
                            <p><strong>Last Updated:</strong> @(Model.UpdatedAt?.ToString("MMM dd, yyyy HH:mm") ?? "N/A")</p>
                        </div>
                        <div class="col-md-6">
                            <p><strong>Priority:</strong> <span class="badge @GetPriorityBadgeClass(Model.Priority)">@Model.Priority</span></p>
                            <p><strong>Type:</strong> @Model.Type</p>
                            <p><strong>Status:</strong> <span class="badge @GetStatusBadgeClass(Model.Status)">@Model.Status</span></p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Description</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.Description</p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Justification</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.Justification</p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Impact Assessment</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.RiskAssessment</p>
                        </div>
                    </div>

                    <div class="mb-4">
                        <h5>Rollback Plan</h5>
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.BackoutPlan</p>
                        </div>
                    </div>

                    @if (Model.Status == ChangeRequestStatus.Draft)
                    {
                        <div class="d-flex justify-content-end">
                            <form asp-action="SubmitForApproval" asp-route-id="@Model.Id" method="post">
                                <button type="submit" class="btn btn-primary">Submit for Approval</button>
                            </form>
                        </div>
                    }
                    
                    @if (Model.Status == ChangeRequestStatus.SubmittedForSupervisorApproval && 
                         (User.IsInRole("Admin") || User.IsInRole("Manager")))
                    {
                        <div class="mt-4">
                            <h5>Supervisor Approval</h5>
                            <div class="mb-3">
                                <label for="comments" class="form-label">Comments (optional)</label>
                                <textarea id="approval-comments" class="form-control" rows="3" placeholder="Add any comments about your approval decision..."></textarea>
                            </div>
                            <div class="d-flex justify-content-end gap-2">
                                <form asp-action="SupervisorReject" asp-route-id="@Model.Id" method="post" id="reject-form">
                                    <input type="hidden" name="comments" id="reject-comments" />
                                    <button type="button" class="btn btn-danger" onclick="submitReject()">
                                        <i class="bi bi-x-circle me-1"></i> Reject
                                    </button>
                                </form>
                                <form asp-action="SupervisorApprove" asp-route-id="@Model.Id" method="post" id="approve-form">
                                    <input type="hidden" name="comments" id="approve-comments" />
                                    <button type="button" class="btn btn-success" onclick="submitApprove()">
                                        <i class="bi bi-check-circle me-1"></i> Approve
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Comments Section -->
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="mb-0">Comments</h5>
                </div>
                <div class="card-body">
                    @if (Model.Comments != null && Model.Comments.Any())
                    {
                        <div class="comments-list">
                            @foreach (var comment in Model.Comments.OrderByDescending(c => c.CreatedAt))
                            {
                                <div class="comment mb-3 p-3 border rounded">
                                    <div class="d-flex justify-content-between">
                                        <strong>@comment.Commenter?.FirstName @comment.Commenter?.LastName</strong>
                                        <small class="text-muted">@comment.CreatedAt.ToString("MMM dd, yyyy HH:mm")</small>
                                    </div>
                                    <p class="mt-2 mb-0">@comment.Text</p>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <p class="text-muted">No comments yet.</p>
                    }

                    <div class="mt-4">
                        <h6>Add a Comment</h6>
                        <form>
                            <div class="mb-3">
                                <textarea class="form-control" rows="3" placeholder="Type your comment here..."></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">Post Comment</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(ChangeRequestStatus status)
    {
        return status switch
        {
            ChangeRequestStatus.Draft => "bg-secondary",
            ChangeRequestStatus.SubmittedForSupervisorApproval => "bg-info",
            ChangeRequestStatus.SubmittedForCABApproval => "bg-warning",
            ChangeRequestStatus.SupervisorApproved => "bg-success",
            ChangeRequestStatus.CABApproved => "bg-success",
            ChangeRequestStatus.Scheduled => "bg-primary",
            ChangeRequestStatus.InProgress => "bg-primary",
            ChangeRequestStatus.Completed => "bg-success",
            ChangeRequestStatus.Failed => "bg-danger",
            ChangeRequestStatus.SupervisorRejected => "bg-danger",
            ChangeRequestStatus.CABRejected => "bg-danger",
            ChangeRequestStatus.Cancelled => "bg-danger",
            _ => "bg-secondary"
        };
    }

    string GetPriorityBadgeClass(ChangeRequestPriority priority)
    {
        return priority switch
        {
            ChangeRequestPriority.Low => "bg-success",
            ChangeRequestPriority.Medium => "bg-warning",
            ChangeRequestPriority.High => "bg-danger",
            ChangeRequestPriority.Critical => "bg-danger text-white",
            _ => "bg-secondary"
        };
    }
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    @if (Model.Status == ChangeRequestStatus.SubmittedForSupervisorApproval && 
         (User.IsInRole("Admin") || User.IsInRole("Manager")))
    {
        <script>
            function submitApprove() {
                document.getElementById('approve-comments').value = document.getElementById('approval-comments').value;
                document.getElementById('approve-form').submit();
            }
            
            function submitReject() {
                document.getElementById('reject-comments').value = document.getElementById('approval-comments').value;
                document.getElementById('reject-form').submit();
            }
        </script>
    }
} 