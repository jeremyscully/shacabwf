// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShacabWf.Web.Data;

#nullable disable

namespace ShacabWf.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250307143943_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BackoutPlan")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ChangeRequestNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Impact")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ImplementedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justification")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("RiskAssessment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ScheduledEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ScheduledStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("ChangeRequests");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestApproval", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActionedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApproverId")
                        .HasColumnType("int");

                    b.Property<int>("ChangeRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("ChangeRequestId");

                    b.ToTable("ChangeRequestApprovals");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<int>("ChangeRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("ChangeRequestId");

                    b.ToTable("ChangeRequestAssignments");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChangeRequestId")
                        .HasColumnType("int");

                    b.Property<int>("CommenterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ChangeRequestId");

                    b.HasIndex("CommenterId");

                    b.ToTable("ChangeRequestComments");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ChangeRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChangeRequestId");

                    b.HasIndex("UserId");

                    b.ToTable("ChangeRequestHistory");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsCABMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupportPersonnel")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "IT",
                            Email = "admin@example.com",
                            FirstName = "Admin",
                            IsCABMember = true,
                            IsSupportPersonnel = true,
                            LastName = "User",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Department = "IT",
                            Email = "manager@example.com",
                            FirstName = "Manager",
                            IsCABMember = true,
                            IsSupportPersonnel = false,
                            LastName = "User",
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            Department = "Finance",
                            Email = "user1@example.com",
                            FirstName = "Regular",
                            IsCABMember = false,
                            IsSupportPersonnel = false,
                            LastName = "User",
                            SupervisorId = 2,
                            Username = "user1"
                        },
                        new
                        {
                            Id = 4,
                            Department = "IT Support",
                            Email = "support@example.com",
                            FirstName = "Support",
                            IsCABMember = false,
                            IsSupportPersonnel = true,
                            LastName = "User",
                            Username = "support"
                        });
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequest", b =>
                {
                    b.HasOne("ShacabWf.Web.Models.User", "CreatedBy")
                        .WithMany("CreatedChangeRequests")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestApproval", b =>
                {
                    b.HasOne("ShacabWf.Web.Models.User", "Approver")
                        .WithMany()
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShacabWf.Web.Models.ChangeRequest", "ChangeRequest")
                        .WithMany("Approvals")
                        .HasForeignKey("ChangeRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("ChangeRequest");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestAssignment", b =>
                {
                    b.HasOne("ShacabWf.Web.Models.User", "Assignee")
                        .WithMany("Assignments")
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ShacabWf.Web.Models.ChangeRequest", "ChangeRequest")
                        .WithMany("Assignments")
                        .HasForeignKey("ChangeRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("ChangeRequest");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestComment", b =>
                {
                    b.HasOne("ShacabWf.Web.Models.ChangeRequest", "ChangeRequest")
                        .WithMany("Comments")
                        .HasForeignKey("ChangeRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShacabWf.Web.Models.User", "Commenter")
                        .WithMany()
                        .HasForeignKey("CommenterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChangeRequest");

                    b.Navigation("Commenter");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequestHistory", b =>
                {
                    b.HasOne("ShacabWf.Web.Models.ChangeRequest", "ChangeRequest")
                        .WithMany("History")
                        .HasForeignKey("ChangeRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ShacabWf.Web.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ChangeRequest");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.User", b =>
                {
                    b.HasOne("ShacabWf.Web.Models.User", "Supervisor")
                        .WithMany("DirectReports")
                        .HasForeignKey("SupervisorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.ChangeRequest", b =>
                {
                    b.Navigation("Approvals");

                    b.Navigation("Assignments");

                    b.Navigation("Comments");

                    b.Navigation("History");
                });

            modelBuilder.Entity("ShacabWf.Web.Models.User", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("CreatedChangeRequests");

                    b.Navigation("DirectReports");
                });
#pragma warning restore 612, 618
        }
    }
}
